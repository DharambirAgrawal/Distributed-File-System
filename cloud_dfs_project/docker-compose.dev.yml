version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: dfs_postgres_dev
    environment:
      POSTGRES_DB: dfs_db
      POSTGRES_USER: dfs_user
      POSTGRES_PASSWORD: dfs_password
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dfs_user -d dfs_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Flask Application (Development Mode)
  web:
    build: .
    container_name: dfs_web_dev
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=true
      - DATABASE_URL=postgresql://dfs_user:dfs_password@postgres:5432/dfs_db
      - STORAGE_PATH=/app/storage
      - BACKUP_PATH=/app/backup_cloud
      - UPLOAD_FOLDER=/app/uploads
      - CHUNK_SIZE=1048576
      - SECRET_KEY=dev-secret-key-for-development
      - ENABLE_CLOUD_BACKUP=false
      - PORT=5000
    volumes:
      - .:/app  # Mount entire source code for live reload
      - ./storage:/app/storage
      - ./backup_cloud:/app/backup_cloud
      - ./uploads:/app/uploads
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    command: python run.py  # Use development server for hot reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dfs_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dfs.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data_dev:/var/lib/pgadmin
    ports:
      - "8080:80"
    depends_on:
      - postgres

volumes:
  postgres_data_dev:
    driver: local
  pgadmin_data_dev:
    driver: local

networks:
  default:
    name: dfs_network_dev
